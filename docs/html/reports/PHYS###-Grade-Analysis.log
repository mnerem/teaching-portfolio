Traceback (most recent call last):
  File "/home/mpnerem/.local/lib/python3.6/site-packages/jupyter_cache/executors/utils.py", line 56, in single_nb_execution
    record_timing=False,
  File "/home/mpnerem/.local/lib/python3.6/site-packages/nbclient/client.py", line 1112, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/home/mpnerem/.local/lib/python3.6/site-packages/nbclient/util.py", line 74, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/home/mpnerem/.local/lib/python3.6/site-packages/nbclient/util.py", line 53, in just_run
    return loop.run_until_complete(coro)
  File "/usr/lib/python3.6/asyncio/base_events.py", line 484, in run_until_complete
    return future.result()
  File "/home/mpnerem/.local/lib/python3.6/site-packages/nbclient/client.py", line 554, in async_execute
    cell, index, execution_count=self.code_cells_executed + 1
  File "/home/mpnerem/.local/lib/python3.6/site-packages/nbclient/client.py", line 857, in async_execute_cell
    self._check_raise_for_error(cell, exec_reply)
  File "/home/mpnerem/.local/lib/python3.6/site-packages/nbclient/client.py", line 760, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
# import modules
import pandas as pd
from matplotlib import pyplot as plt
from matplotlib import rc
# set font to tex interpreter
rc('text',usetex=True)
rc('font',family='serif')
import numpy as np
plt.ion()

sos=pd.read_excel('../../../../Student-Opinion-Surveys/201703-PHYS104-SOS.xlsx',sheet_name='sos')
gb=pd.read_csv('gc_201820_SPRING_PHYS104N_20116_fullgc.csv')

def MakeHistogram(x,*args):
    plt.subplots(figsize=(13,7))
    FACECOLOR=np.array([80,146,220])/255

    if np.max(x)>100:
        bins2plot=np.arange(0,np.max(x)+5,5)
    else:
        bins2plot=np.arange(0,105,5)
    n, bins, patches = plt.hist(x,bins=bins2plot,
                                edgecolor=None,
                                linewidth=.1,
                                facecolor=FACECOLOR,
                                )

    # Gaussian model of data
    MEAN = np.mean(x)
    STD = np.std(x)
    VAR = np.var(x)
    HEIGHT=max(n)
    def ygauss(X):
        return np.exp(-(X-MEAN)**2/(2*STD**2))

    # define range of x values to plot the fits to histogram
    if STD*2+MEAN > np.max(x):
        xfitmax = STD*2+MEAN 
    else:
        xfitmax = np.max(x)
    if np.max(x) > 100:
        xfitmax = np.max(x)
    if xfitmax < 100:
        xfitmax = 100

    # plot vertical bars representing the mean and standard deviations on histogram
    xstd = np.array([-2*STD, -1*STD, 1*STD, 2*STD]+MEAN)
    ystd = HEIGHT*ygauss(xstd)
    plt.plot([MEAN, MEAN], [0, HEIGHT*ygauss(MEAN)],
             color='red',
             linestyle='--',
             linewidth=1,
            )
    for ii in np.arange(0, xstd.shape[0]):
        plt.plot([xstd[ii],xstd[ii]],[0,ystd[ii]] ,
                 color='black',
                 linewidth=1,
                 linestyle='--'
                )

    # plot curve of gaussian fit to the histogram
    xfit = np.linspace(0,xfitmax,100)
    yfit = HEIGHT*ygauss(xfit)
    plt.plot(xfit,yfit,linewidth=1)

    # add title and axis labels
    plt.text(200,375,
             'mean $=$ %.2f \n median $=$ %.2f \n std $=$ %.2f' %(MEAN,np.median(x), STD),
             va='center',
             ha='right',
             backgroundcolor='white',
             fontsize=16,
             bbox=dict(boxstyle='round', facecolor='wheat'),
             transform=None
            )
    plt.xlabel('Percent Grade',fontsize=18)
    plt.ylabel('Count',fontsize=18)
    if len(args)!=0:
        plt.title(args[0],fontsize=20)
    plt.xticks(np.arange(0,xfitmax+5,5),fontsize=16)
    plt.yticks(fontsize=16)
    plt.grid(True)
    

MakeHistogram(gb['Course Grade'],'PHYS104 20133 Course Grades')
MakeHistogram(gb['Lab'],'PHYS104 20133 Lab Grades')
MakeHistogram(gb['HW'],'PHYS104 20133 HW Grades')
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mFileNotFoundError[0m                         Traceback (most recent call last)
[0;32m<ipython-input-1-ac00b5bafb7e>[0m in [0;36m<module>[0;34m[0m
[1;32m      9[0m [0mplt[0m[0;34m.[0m[0mion[0m[0;34m([0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     10[0m [0;34m[0m[0m
[0;32m---> 11[0;31m [0msos[0m[0;34m=[0m[0mpd[0m[0;34m.[0m[0mread_excel[0m[0;34m([0m[0;34m'../../../../Student-Opinion-Surveys/201703-PHYS104-SOS.xlsx'[0m[0;34m,[0m[0msheet_name[0m[0;34m=[0m[0;34m'sos'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     12[0m [0mgb[0m[0;34m=[0m[0mpd[0m[0;34m.[0m[0mread_csv[0m[0;34m([0m[0;34m'gc_201820_SPRING_PHYS104N_20116_fullgc.csv'[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     13[0m [0;34m[0m[0m

[0;32m~/.local/lib/python3.6/site-packages/pandas/util/_decorators.py[0m in [0;36mwrapper[0;34m(*args, **kwargs)[0m
[1;32m    294[0m                 )
[1;32m    295[0m                 [0mwarnings[0m[0;34m.[0m[0mwarn[0m[0;34m([0m[0mmsg[0m[0;34m,[0m [0mFutureWarning[0m[0;34m,[0m [0mstacklevel[0m[0;34m=[0m[0mstacklevel[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 296[0;31m             [0;32mreturn[0m [0mfunc[0m[0;34m([0m[0;34m*[0m[0margs[0m[0;34m,[0m [0;34m**[0m[0mkwargs[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    297[0m [0;34m[0m[0m
[1;32m    298[0m         [0;32mreturn[0m [0mwrapper[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.local/lib/python3.6/site-packages/pandas/io/excel/_base.py[0m in [0;36mread_excel[0;34m(io, sheet_name, header, names, index_col, usecols, squeeze, dtype, engine, converters, true_values, false_values, skiprows, nrows, na_values, keep_default_na, na_filter, verbose, parse_dates, date_parser, thousands, comment, skipfooter, convert_float, mangle_dupe_cols)[0m
[1;32m    302[0m [0;34m[0m[0m
[1;32m    303[0m     [0;32mif[0m [0;32mnot[0m [0misinstance[0m[0;34m([0m[0mio[0m[0;34m,[0m [0mExcelFile[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 304[0;31m         [0mio[0m [0;34m=[0m [0mExcelFile[0m[0;34m([0m[0mio[0m[0;34m,[0m [0mengine[0m[0;34m=[0m[0mengine[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    305[0m     [0;32melif[0m [0mengine[0m [0;32mand[0m [0mengine[0m [0;34m!=[0m [0mio[0m[0;34m.[0m[0mengine[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    306[0m         raise ValueError(

[0;32m~/.local/lib/python3.6/site-packages/pandas/io/excel/_base.py[0m in [0;36m__init__[0;34m(self, path_or_buffer, engine)[0m
[1;32m    865[0m         [0mself[0m[0;34m.[0m[0m_io[0m [0;34m=[0m [0mstringify_path[0m[0;34m([0m[0mpath_or_buffer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    866[0m [0;34m[0m[0m
[0;32m--> 867[0;31m         [0mself[0m[0;34m.[0m[0m_reader[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0m_engines[0m[0;34m[[0m[0mengine[0m[0;34m][0m[0;34m([0m[0mself[0m[0;34m.[0m[0m_io[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    868[0m [0;34m[0m[0m
[1;32m    869[0m     [0;32mdef[0m [0m__fspath__[0m[0;34m([0m[0mself[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.local/lib/python3.6/site-packages/pandas/io/excel/_xlrd.py[0m in [0;36m__init__[0;34m(self, filepath_or_buffer)[0m
[1;32m     20[0m         [0merr_msg[0m [0;34m=[0m [0;34m"Install xlrd >= 1.0.0 for Excel support"[0m[0;34m[0m[0;34m[0m[0m
[1;32m     21[0m         [0mimport_optional_dependency[0m[0;34m([0m[0;34m"xlrd"[0m[0;34m,[0m [0mextra[0m[0;34m=[0m[0merr_msg[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 22[0;31m         [0msuper[0m[0;34m([0m[0;34m)[0m[0;34m.[0m[0m__init__[0m[0;34m([0m[0mfilepath_or_buffer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     23[0m [0;34m[0m[0m
[1;32m     24[0m     [0;34m@[0m[0mproperty[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.local/lib/python3.6/site-packages/pandas/io/excel/_base.py[0m in [0;36m__init__[0;34m(self, filepath_or_buffer)[0m
[1;32m    351[0m             [0mself[0m[0;34m.[0m[0mbook[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mload_workbook[0m[0;34m([0m[0mfilepath_or_buffer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    352[0m         [0;32melif[0m [0misinstance[0m[0;34m([0m[0mfilepath_or_buffer[0m[0;34m,[0m [0mstr[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 353[0;31m             [0mself[0m[0;34m.[0m[0mbook[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mload_workbook[0m[0;34m([0m[0mfilepath_or_buffer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    354[0m         [0;32melif[0m [0misinstance[0m[0;34m([0m[0mfilepath_or_buffer[0m[0;34m,[0m [0mbytes[0m[0;34m)[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    355[0m             [0mself[0m[0;34m.[0m[0mbook[0m [0;34m=[0m [0mself[0m[0;34m.[0m[0mload_workbook[0m[0;34m([0m[0mBytesIO[0m[0;34m([0m[0mfilepath_or_buffer[0m[0;34m)[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m

[0;32m~/.local/lib/python3.6/site-packages/pandas/io/excel/_xlrd.py[0m in [0;36mload_workbook[0;34m(self, filepath_or_buffer)[0m
[1;32m     35[0m             [0;32mreturn[0m [0mopen_workbook[0m[0;34m([0m[0mfile_contents[0m[0;34m=[0m[0mdata[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m     36[0m         [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0;32m---> 37[0;31m             [0;32mreturn[0m [0mopen_workbook[0m[0;34m([0m[0mfilepath_or_buffer[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m     38[0m [0;34m[0m[0m
[1;32m     39[0m     [0;34m@[0m[0mproperty[0m[0;34m[0m[0;34m[0m[0m

[0;32m/usr/local/lib/python3.6/dist-packages/xlrd/__init__.py[0m in [0;36mopen_workbook[0;34m(filename, logfile, verbosity, use_mmap, file_contents, encoding_override, formatting_info, on_demand, ragged_rows)[0m
[1;32m    109[0m     [0;32melse[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[1;32m    110[0m         [0mfilename[0m [0;34m=[0m [0mos[0m[0;34m.[0m[0mpath[0m[0;34m.[0m[0mexpanduser[0m[0;34m([0m[0mfilename[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[0;32m--> 111[0;31m         [0;32mwith[0m [0mopen[0m[0;34m([0m[0mfilename[0m[0;34m,[0m [0;34m"rb"[0m[0;34m)[0m [0;32mas[0m [0mf[0m[0;34m:[0m[0;34m[0m[0;34m[0m[0m
[0m[1;32m    112[0m             [0mpeek[0m [0;34m=[0m [0mf[0m[0;34m.[0m[0mread[0m[0;34m([0m[0mpeeksz[0m[0;34m)[0m[0;34m[0m[0;34m[0m[0m
[1;32m    113[0m     [0;32mif[0m [0mpeek[0m [0;34m==[0m [0;34mb"PK\x03\x04"[0m[0;34m:[0m [0;31m# a ZIP file[0m[0;34m[0m[0;34m[0m[0m

[0;31mFileNotFoundError[0m: [Errno 2] No such file or directory: '../../../../Student-Opinion-Surveys/201703-PHYS104-SOS.xlsx'
FileNotFoundError: [Errno 2] No such file or directory: '../../../../Student-Opinion-Surveys/201703-PHYS104-SOS.xlsx'

